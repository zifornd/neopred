/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: '.*:PREPROCESS_STAR:STAR_ALIGN' {
        ext.args   = '--readFilesCommand zcat --outReadsUnmapped None --chimSegmentMin 12 --chimJunctionOverhangMin 12 --chimOutJunctionFormat 1 --alignSJDBoverhangMin 10 --alignMatesGapMax 1000000 --alignIntronMax 1000000 --alignSJstitchMismatchNmax 5 -1 5 5 --outSAMstrandField intronMotif --outSAMunmapped Within --chimMultimapScoreRange 10 --chimMultimapNmax 10 --chimNonchimScoreDropMin 10 --peOverlapNbasesMin 12 --peOverlapMMp 0.1 --genomeLoad NoSharedMemory --outSAMheaderHD @HD VN:1.4 --twopassMode Basic --quantMode TranscriptomeSAM'
        publishDir = [
            [
                path: { "${params.outdir}/star/log" },
                mode: params.publish_dir_mode,
                pattern: '*.{out,tab}'
            ],
            [
                path: { params.save_align_intermeds ? "${params.outdir}/star" : params.outdir },
                mode: params.publish_dir_mode,
                pattern: '*.bam',
                saveAs: { params.save_align_intermeds ? it : null }
            ],
            [
                path: { params.save_unaligned ? "${params.outdir}/star/unmapped" : params.outdir },
                mode: params.publish_dir_mode,
                pattern: '*.fastq.gz',
                saveAs: { params.save_unaligned ? it : null }
            ]
        ]
    }

    withName: '.*:RSEQC:RSEQC_TIN' {
                publishDir = [
                    path: { "${params.outdir}/star/rseqc/tin" },
                    mode: params.publish_dir_mode,
                    pattern: '*.{txt}',
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }

    withName: '.*:RSEQC:RSEQC_READDISTRIBUTION' {
                publishDir = [
                    path: { "${params.outdir}/star/rseqc/read_distribution" },
                    mode: params.publish_dir_mode,
                    pattern: '*.{txt}',
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }

    withName: '.*:RSEQC:RSEQC_JUNCTIONSATURATION' {
                publishDir = [
                    [
                        path: { "${params.outdir}/star/rseqc/junction_saturation/pdf" },
                        mode: params.publish_dir_mode,
                        pattern: '*.pdf'
                    ],
                    [
                        path: { "${params.outdir}/star/rseqc/junction_saturation/rscript" },
                        mode: params.publish_dir_mode,
                        pattern: '*.r'
                    ]
                ]
            }

    withName: '.*:RSEQC:RSEQC_GENEBODYCOVERAGE' {
                publishDir = [
                    [
                        path: { "${params.outdir}/star/rseqc/gene_body_coverage/pdf" },
                        mode: params.publish_dir_mode,
                        pattern: '*.pdf'
                    ],
                    [
                        path: { "${params.outdir}/star/rseqc/gene_body_coverage/rscript" },
                        mode: params.publish_dir_mode,
                        pattern: '*.r'
                    ]
                ]
            }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
