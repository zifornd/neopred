nextflow_process {

    name "Test Process RSEQC_JUNCTIONSATURATION"
    script "../main.nf"
    process "RSEQC_JUNCTIONSATURATION"

    tag "modules"
    tag "modules_nfcore"
    tag "rseqc"
    tag "rseqc/junctionsaturation"

    test("sarscov2 paired-end [bam]") {

        when {
            process {
                """
                input[0] = Channel.of([
                            [ id:'test'], // meta map
                            file(params.modules_testdata_base_path + "genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam", checkIfExists: true),
                            file(params.modules_testdata_base_path + "genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam.bai", checkIfExists: true)
                ])
                input[1] = file(params.modules_testdata_base_path + "genomics/sarscov2/genome/bed/test.bed", checkIfExists: true)
                """
            }
        }

        then {
		println process.out 
		println process.out.pdf 
		println process.out.rscript
		println process.out.versions

            assertAll(

                { assert process.success },
                { assert process.out.pdf },
                { assert process.out.rscript },
		{ assert process.out.versions }
		//{ assert snapshot(process.out.versions)}
                //{ assert snapshot(file(process.out.pdf))},
                //{ assert snapshot(process.out.rscript).match("rscript") },
                //{ assert snapshot(process.out.versions).match("versions") }

            )
        }
    }

    test("sarscov2 paired-end [bam] - stub") {

    options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                            [ id:'test' ], // meta map
                            file(params.modules_testdata_base_path + "genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam", checkIfExists: true),
                            file(params.modules_testdata_base_path + "genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam.bai", checkIfExists: true)
                ])
                input[1] = file(params.modules_testdata_base_path + "genomics/sarscov2/genome/bed/test.bed", checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
               // { assert snapshot(process.out).match()}
            )
        }
    }
}
