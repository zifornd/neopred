Changes in module 'nf-core/bedtools/intersect'
'modules/nf-core/bedtools/intersect/meta.yml' is unchanged
'modules/nf-core/bedtools/intersect/environment.yml' is unchanged
Changes in 'bedtools/intersect/main.nf':
--- modules/nf-core/bedtools/intersect/main.nf
+++ modules/nf-core/bedtools/intersect/main.nf
@@ -8,33 +8,32 @@
         'biocontainers/bedtools:2.31.1--hf5e1c6e_0' }"
 
     input:
-    tuple val(meta), path(intervals1), path(intervals2)
-    tuple val(meta2), path(chrom_sizes)
+    tuple val(meta), path(bam), path(bai)
+    path(hk_bed)
 
     output:
-    tuple val(meta), path("*.${extension}"), emit: intersect
-    path  "versions.yml"                   , emit: versions
+    tuple val(meta), path("*_downsample_hk.bam"), emit: hk_bam   
+    path  "versions.yml"                        , emit: versions
 
     when:
-    task.ext.when == null || task.ext.when
+    //task.ext.when == null || task.ext.when
+    params.hk_bed
 
     script:
     def args = task.ext.args ?: ''
     def prefix = task.ext.prefix ?: "${meta.id}"
     //Extension of the output file. It is set by the user via "ext.suffix" in the config. Corresponds to the file format which depends on arguments (e. g., ".bed", ".bam", ".txt", etc.).
-    extension = task.ext.suffix ?: "${intervals1.extension}"
-    def sizes = chrom_sizes ? "-g ${chrom_sizes}" : ''
-    if ("$intervals1" == "${prefix}.${extension}" ||
-        "$intervals2" == "${prefix}.${extension}")
-        error "Input and output names are the same, use \"task.ext.prefix\" to disambiguate!"
+    //extension = task.ext.suffix ?: "${intervals1.extension}"
+    //def sizes = chrom_sizes ? "-g ${chrom_sizes}" : ''
+    //if ("$intervals1" == "${prefix}.${extension}" ||
+    //    "$intervals2" == "${prefix}.${extension}")
+    //    error "Input and output names are the same, use \"task.ext.prefix\" to disambiguate!"
     """
     bedtools \\
         intersect \\
-        -a $intervals1 \\
-        -b $intervals2 \\
-        $args \\
-        $sizes \\
-        > ${prefix}.${extension}
+        -a $bam \\
+        -b $hk_bed \\
+        > "${prefix}_downsample_hk.bam"
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
@@ -44,12 +43,12 @@
 
     stub:
     def prefix = task.ext.prefix ?: "${meta.id}"
-    extension = task.ext.suffix ?: "bed"
-    if ("$intervals1" == "${prefix}.${extension}" ||
-        "$intervals2" == "${prefix}.${extension}")
-        error "Input and output names are the same, use \"task.ext.prefix\" to disambiguate!"
+    //extension = task.ext.suffix ?: "bed"
+    //if ("$intervals1" == "${prefix}.${extension}" ||
+    //    "$intervals2" == "${prefix}.${extension}")
+    //    error "Input and output names are the same, use \"task.ext.prefix\" to disambiguate!"
     """
-    touch ${prefix}.${extension}
+    touch ${prefix}_downsample_hk.bam
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":

'modules/nf-core/bedtools/intersect/tests/tags.yml' is unchanged
Changes in 'bedtools/intersect/tests/main.nf.test':
--- modules/nf-core/bedtools/intersect/tests/main.nf.test
+++ modules/nf-core/bedtools/intersect/tests/main.nf.test
@@ -10,18 +10,17 @@
     tag "bedtools"
     tag "bedtools/intersect"
 
-    test("sarscov2 - bed - bed") {
+    test("sarscov2 paired-end [bam]") {
 
         when {
             process {
                 """
-                input[0] = [
-                    [ id:'test' ],
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed', checkIfExists: true),
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test2.bed', checkIfExists: true)
-                ]
-
-                input[1] = [[:], []]
+                input[0] = Channel.of([
+                    [ id:'test'],
+                    file(params.modules_testdata_base_path + "genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam", checkIfExists: true),
+                    file(params.modules_testdata_base_path + "genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam.bai", checkIfExists: true)
+                ])
+                input[1] = Channel.of(file(params.modules_testdata_base_path + "genomics/sarscov2/genome/bed/test.bed12", checkIfExists: true))
                 """
             }
         }
@@ -35,45 +34,19 @@
 
     }
 
-    test("sarscov2 - bam - bam") {
-
-        when {
-            process {
-                """
-                input[0] = [
-                    [ id:'test' ],
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.bam', checkIfExists: true),
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/baits.bed', checkIfExists: true)
-                ]
-
-                input[1] = [[:], []]
-                """
-            }
-        }
-
-        then {
-            assertAll(
-                { assert process.success },
-                { assert snapshot(process.out).match() }
-            )
-        }
-
-    }
-
-    test("sarscov2 - bed - stub") {
+    test("sarscov2 paired-end [bam] - stub") {
 
         options "-stub"
 
         when {
             process {
                 """
-                input[0] = [
-                    [ id:'test' ],
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed', checkIfExists: true),
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test2.bed', checkIfExists: true)
-                ]
-
-                input[1] = [[:], []]
+                input[0] = Channel.of([
+                    [ id:'test'],
+                    file(params.modules_testdata_base_path + "genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam", checkIfExists: true),
+                    file(params.modules_testdata_base_path + "genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam.bai", checkIfExists: true)
+                ])
+                input[1] = Channel.of(file(params.modules_testdata_base_path + "genomics/sarscov2/genome/bed/test.bed12", checkIfExists: true))
                 """
             }
         }

'modules/nf-core/bedtools/intersect/tests/nextflow.config' is unchanged
Changes in 'bedtools/intersect/tests/main.nf.test.snap':
--- modules/nf-core/bedtools/intersect/tests/main.nf.test.snap
+++ modules/nf-core/bedtools/intersect/tests/main.nf.test.snap
@@ -1,5 +1,5 @@
 {
-    "sarscov2 - bam - bam": {
+    "sarscov2 paired-end [bam]": {
         "content": [
             {
                 "0": [
@@ -7,18 +7,18 @@
                         {
                             "id": "test"
                         },
-                        "test_out.bam:md5,738324efe2b1e442ceb6539a630c3fe6"
+                        "test_out_downsample_hk.bam:md5,0d937c3e7be055d523af2144cce609b9"
                     ]
                 ],
                 "1": [
                     "versions.yml:md5,42ba439339672f4a9193f0f0fe7a7f64"
                 ],
-                "intersect": [
+                "hk_bam": [
                     [
                         {
                             "id": "test"
                         },
-                        "test_out.bam:md5,738324efe2b1e442ceb6539a630c3fe6"
+                        "test_out_downsample_hk.bam:md5,0d937c3e7be055d523af2144cce609b9"
                     ]
                 ],
                 "versions": [
@@ -27,12 +27,12 @@
             }
         ],
         "meta": {
-            "nf-test": "0.8.4",
-            "nextflow": "24.04.4"
+            "nf-test": "0.9.2",
+            "nextflow": "24.10.1"
         },
-        "timestamp": "2024-09-17T20:55:57.454847668"
+        "timestamp": "2024-12-04T05:35:21.397125"
     },
-    "sarscov2 - bed - bed": {
+    "sarscov2 paired-end [bam] - stub": {
         "content": [
             {
                 "0": [
@@ -40,18 +40,18 @@
                         {
                             "id": "test"
                         },
-                        "test_out.bed:md5,afcbf01c2f2013aad71dbe8e34f2c15c"
+                        "test_out_downsample_hk.bam:md5,d41d8cd98f00b204e9800998ecf8427e"
                     ]
                 ],
                 "1": [
                     "versions.yml:md5,42ba439339672f4a9193f0f0fe7a7f64"
                 ],
-                "intersect": [
+                "hk_bam": [
                     [
                         {
                             "id": "test"
                         },
-                        "test_out.bed:md5,afcbf01c2f2013aad71dbe8e34f2c15c"
+                        "test_out_downsample_hk.bam:md5,d41d8cd98f00b204e9800998ecf8427e"
                     ]
                 ],
                 "versions": [
@@ -60,42 +60,9 @@
             }
         ],
         "meta": {
-            "nf-test": "0.8.4",
-            "nextflow": "24.04.4"
+            "nf-test": "0.9.2",
+            "nextflow": "24.10.1"
         },
-        "timestamp": "2024-09-17T20:55:49.072132931"
-    },
-    "sarscov2 - bed - stub": {
-        "content": [
-            {
-                "0": [
-                    [
-                        {
-                            "id": "test"
-                        },
-                        "test_out.bed:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "1": [
-                    "versions.yml:md5,42ba439339672f4a9193f0f0fe7a7f64"
-                ],
-                "intersect": [
-                    [
-                        {
-                            "id": "test"
-                        },
-                        "test_out.bed:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "versions": [
-                    "versions.yml:md5,42ba439339672f4a9193f0f0fe7a7f64"
-                ]
-            }
-        ],
-        "meta": {
-            "nf-test": "0.8.4",
-            "nextflow": "24.04.4"
-        },
-        "timestamp": "2024-09-17T20:56:06.259192552"
+        "timestamp": "2024-12-04T05:35:34.177846"
     }
 }
************************************************************
